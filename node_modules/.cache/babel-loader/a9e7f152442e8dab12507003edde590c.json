{"ast":null,"code":"import { LOGIN, LOGOUT, REGISTER } from '../types/const';\nimport { isAuthenticated, authenticateSuccess, logout } from '../../utils/session'; // 初始化state\n\nconst initState = {\n  isLogin: !!isAuthenticated(),\n  users: localStorage.users ? JSON.parse(localStorage.users) : [{\n    username: 'admin',\n    password: 'admin'\n  }],\n  loginUser: isAuthenticated() ? {\n    name: isAuthenticated()\n  } : {}\n};\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case LOGIN:\n      authenticateSuccess(action.name);\n      return { ...state,\n        isLogin: true,\n        loginUser: {\n          name: action.name\n        }\n      };\n\n    case LOGOUT:\n      logout();\n      return { ...state,\n        isLogin: false,\n        loginUser: {}\n      };\n\n    case REGISTER:\n      localStorage.setItem('users', JSON.stringify([...state.users, {\n        username: action.username,\n        password: action.password\n      }]));\n      return { ...state,\n        users: [...state.users, {\n          username: action.username,\n          password: action.password\n        }]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/curtain/web/React/admin/src/redux/reducers/userStore.js"],"names":["LOGIN","LOGOUT","REGISTER","isAuthenticated","authenticateSuccess","logout","initState","isLogin","users","localStorage","JSON","parse","username","password","loginUser","name","reducer","state","action","type","setItem","stringify"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,gBAAxC;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,MAA/C,QAA6D,qBAA7D,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,CAAC,CAACJ,eAAe,EADV;AAEhBK,EAAAA,KAAK,EAAEC,YAAY,CAACD,KAAb,GAAqBE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACD,KAAxB,CAArB,GAAqD,CAAC;AAACI,IAAAA,QAAQ,EAAE,OAAX;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAAD,CAF5C;AAGhBC,EAAAA,SAAS,EAAEX,eAAe,KAAK;AAAEY,IAAAA,IAAI,EAAEZ,eAAe;AAAvB,GAAL,GAAmC;AAH7C,CAAlB;AAMA,eAAe,SAASa,OAAT,CAAiBC,KAAK,GAACX,SAAvB,EAAkCY,MAAlC,EAA0C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,KAAL;AACEI,MAAAA,mBAAmB,CAACc,MAAM,CAACH,IAAR,CAAnB;AACA,aAAO,EAAE,GAAGE,KAAL;AAAYV,QAAAA,OAAO,EAAE,IAArB;AAA2BO,QAAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEG,MAAM,CAACH;AAAf;AAAtC,OAAP;;AACF,SAAKd,MAAL;AACEI,MAAAA,MAAM;AACN,aAAO,EAAE,GAAGY,KAAL;AAAYV,QAAAA,OAAO,EAAE,KAArB;AAA4BO,QAAAA,SAAS,EAAE;AAAvC,OAAP;;AACF,SAAKZ,QAAL;AACEO,MAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAe,CAAC,GAAGJ,KAAK,CAACT,KAAV,EAAiB;AAC5DI,QAAAA,QAAQ,EAAEM,MAAM,CAACN,QAD2C;AACjCC,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AADgB,OAAjB,CAAf,CAA9B;AAGA,aAAO,EACL,GAAGI,KADE;AAELT,QAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV,EAAiB;AACtBI,UAAAA,QAAQ,EAAEM,MAAM,CAACN,QADK;AACKC,UAAAA,QAAQ,EAAEK,MAAM,CAACL;AADtB,SAAjB;AAFF,OAAP;;AAMF;AACE,aAAOI,KAAP;AAlBJ;AAoBD","sourcesContent":["import { LOGIN, LOGOUT, REGISTER } from '../types/const';\nimport { isAuthenticated, authenticateSuccess, logout } from '../../utils/session';\n\n// 初始化state\nconst initState = {\n  isLogin: !!isAuthenticated(),\n  users: localStorage.users ? JSON.parse(localStorage.users) :[{username: 'admin', password: 'admin'}],\n  loginUser: isAuthenticated() ? { name: isAuthenticated() } : {}\n};\n\nexport default function reducer(state=initState, action) {\n  switch (action.type) {\n    case LOGIN:\n      authenticateSuccess(action.name);\n      return { ...state, isLogin: true, loginUser: { name: action.name }};\n    case LOGOUT:\n      logout();\n      return { ...state, isLogin: false, loginUser: {}}\n    case REGISTER:\n      localStorage.setItem('users', JSON.stringify([...state.users, {\n        username: action.username, password: action.password\n      }]));\n      return {\n        ...state,\n        users: [...state.users, {\n          username: action.username, password: action.password\n        }]\n      };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}