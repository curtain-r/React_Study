{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/curtain/web/React/admin/src/components/PrivateRoute/index.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../../utils/session';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/curtain/web/React/admin/src/components/PrivateRoute/index.js"],"names":["React","Route","Redirect","isAuthenticated","PrivateRoute","component","Component","rest","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACnB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACNL,eAAe,kBACb,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,UADa,gBAGb,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACZC,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMR,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../../utils/session';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route \n    {...rest}\n    render={(props) => (\n      isAuthenticated()\n      ? <Component {...props} />\n      : (\n        <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }}></Redirect>\n      )\n    )}\n  >\n\n  </Route>\n)\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}